ğŸ“Œ ManipulaÃ§Ã£o de Strings

Crie um mÃ³dulo chamado manipulacao_strings que contenha funÃ§Ãµes para realizar operaÃ§Ãµes com strings, como inverter uma string, contar o nÃºmero de palavras em uma string e verificar se uma string Ã© um palÃ­ndromo (lÃª-se igual de trÃ¡s para frente). 
Crie um programa principal que importe o mÃ³dulo e use essas funÃ§Ãµes com strings fornecidas pelo usuÃ¡rio.

ğŸ“‹ DescriÃ§Ã£o

Este programa implementa um mÃ³dulo de manipulaÃ§Ã£o de strings (manipulacao_strings.py) com funÃ§Ãµes para:

- Inverter uma string
- Contar o nÃºmero de palavras
- Verificar se uma string Ã© um palÃ­ndromo

O programa principal (main.py) importa esse mÃ³dulo e apresenta um menu interativo para o usuÃ¡rio.

ğŸ“‚ Estrutura de Arquivos

manipulacao_strings/
â”‚â”€â”€ main.py
â”‚â”€â”€ manipulacao_strings.py

ğŸš€ Como Executar

1. Certifique-se de que os arquivos main.py e manipulacao_strings.py estÃ£o na mesma pasta.
2. No terminal, execute o programa com: python main.py
3. Escolha a operaÃ§Ã£o desejada no menu e forneÃ§a a string para manipulaÃ§Ã£o.
4. ApÃ³s cada operaÃ§Ã£o, o usuÃ¡rio pode decidir continuar ou sair do programa.

ğŸ”§ Funcionalidades

- InversÃ£o de strings: transforma "Python" em "nohtyP".
- Contagem de palavras: "OlÃ¡, mundo!" retorna 2.
- VerificaÃ§Ã£o de palÃ­ndromos: reconhece palavras como "radar" e "ovo".
- Menu interativo para facilitar a escolha das operaÃ§Ãµes.

ğŸ“Œ ObservaÃ§Ãµes

O Python pode criar uma pasta __pycache__ automaticamente ao executar o programa. Essa pasta armazena versÃµes compiladas dos arquivos para melhorar a performance.

- Caso queira excluir a pasta __pycache__, use o comando: rm -rf __pycache__
- ou no Windows: rmdir /s /q __pycache__

ğŸ“Œ Requisitos

- Python 3.x instalado
- Executar os scripts em um ambiente adequado (terminal, cmd ou IDE como VSCode, PyCharm, etc.)

ğŸ’¡ Dicas

Se ocorrer erro na importaÃ§Ã£o dos mÃ³dulos, verifique:

- Se os arquivos estÃ£o na mesma pasta.
- Se estÃ¡ executando o script principal.
- Se precisar rodar como mÃ³dulo, use: python -m main
